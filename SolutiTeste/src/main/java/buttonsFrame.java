

import com.google.gson.Gson;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.security.KeyStore;
import org.bouncycastle.cms.CMSSignedDataGenerator;
import org.bouncycastle.util.encoders.Base64;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author robsoncardozo
 */
public class buttonsFrame extends javax.swing.JFrame {

    /**
     * Creates new form buttonsFrame
     */
    public buttonsFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonSolicitar = new javax.swing.JButton();
        validateDesafio = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textDesafio = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonSolicitar.setText("SOLICITAR DESAFIO");
        buttonSolicitar.setToolTipText("");
        buttonSolicitar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSolicitarMouseClicked(evt);
            }
        });
        buttonSolicitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSolicitarActionPerformed(evt);
            }
        });

        validateDesafio.setText("ASSINAR DESAFIO E VALIDAR");
        validateDesafio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                validateDesafioMouseClicked(evt);
            }
        });

        textDesafio.setColumns(20);
        textDesafio.setRows(5);
        jScrollPane1.setViewportView(textDesafio);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(validateDesafio)
                        .addGap(0, 189, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addComponent(buttonSolicitar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonSolicitar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(validateDesafio, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //AÇÃO DO BOTÃO "SOLICITAR DESAFIO"
    private void buttonSolicitarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSolicitarMouseClicked
        try {
            //COLOCA O TEXTO NA TELA DE ACORDO COM O RETORNO DADO EM GetDesafio
            textDesafio.setText(GetPostDesafio.GetDesafio());
            
        } catch (Exception ex) {
            Logger.getLogger(buttonsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_buttonSolicitarMouseClicked

    private void validateDesafioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_validateDesafioMouseClicked
        try {
            
            //INSTANCIA A CLASSE PARA ASSINATURA PKCS7
            assinaBc signer = new assinaBc();
            KeyStore keyStore = signer.loadKeyStore();
            CMSSignedDataGenerator signatureGenerator = signer.setUpProvider(keyStore);
            

            
            byte[] signedBytes = signer.signPkcs7(GetPostDesafio.convertStringToByteArray(), signatureGenerator);
            String recebeCrip = new String(Base64.encode(signedBytes));
            
            
            String assinaturaFormat = recebeCrip.replaceAll("(.{64})", "$1\n");
            
            String resposta = ("-----BEGIN PKCS7-----\n" + assinaturaFormat + "\n-----END PKCS7-----");
            
            //System.out.println(resposta);
            
           
            Gson gson = new Gson();
            GetPostDesafio.respostaJson = gson.toJson(resposta);
            //System.out.println(GetPostDesafio.respostaJson);
            GetPostDesafio.postDesafio();
            
            
            
               
            
            
            

        } catch (Exception ex) {
            Logger.getLogger(buttonsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_validateDesafioMouseClicked

    private void buttonSolicitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSolicitarActionPerformed

    }//GEN-LAST:event_buttonSolicitarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(buttonsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(buttonsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(buttonsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(buttonsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonSolicitar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textDesafio;
    private javax.swing.JButton validateDesafio;
    // End of variables declaration//GEN-END:variables
}
